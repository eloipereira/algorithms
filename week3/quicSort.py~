def quickSort(A):
    A_s = A_left = A_right = []
    n = len(A)
    if n < 2:
        return A
    l = 0
    (Ap,p) = partition(A,l)
    A_left = quickSort(Ap[:p-1])
    A_right = quickSort(Ap[p+1:])
    A_s = []
    A_s = A_left.append(A[p])
    A_s += A_right
    return A_s

def partition(A,l):
    n = len(A)
    if n < 2:
        return A
    p = A[l]
    i = l + 1
    for j in range (l+1,n):
        if A[j] < p:
            swap(A,i,j)
            i = i + 1
    swap(A,l,i-1)
    return (A,i-1)


def swap(A,i,j):
    l = A[i]
    A[i] = A[j]
    A[j] = l
    
        
